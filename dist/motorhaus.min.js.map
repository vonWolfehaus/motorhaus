{"version":3,"sources":["motorhaus.js","core/Base.js","core/Engine.js","core/LinkedList.js","core/Signal.js","core/StateManager.js","core/kai.js","core/tower.js","core/world.js","utils/DualPool.js","utils/debugDraw.js","utils/util.js"],"names":["window","mh","version","Base","this","uuid","Math","random","toString","slice","Date","now","active","Engine","kai","debugMessages","console","log","Component","state","StateManager","_paused","self","_onInit","init","document","readyState","setTimeout","addEventListener","prototype","constructor","ready","body","removeEventListener","evt","tower","resume","dispatch","pause","engine","inputBlocked","updateBound","update","bind","start","queue","next","i","node","obj","list","componentsSorted","len","length","requestAnimationFrame","debugCtx","clearRect","width","height","first","current","dispose","LinkedListNode","prev","free","LinkedList","last","objToNodeMap","floor","priority","getNode","addNode","swapObjects","newObj","add","Error","showDebug","dump","has","moveUp","c","b","a","oldCNext","moveDown","sort","compare","l","sortArray","push","object","clear","remove","shift","pop","concat","msg","SignalBinding","signal","listener","isOnce","listenerContext","params","_listener","_isOnce","context","_signal","execute","paramsArr","handlerReturn","apply","detach","isBound","getListener","getSignal","_destroy","Signal","_bindings","_prevParams","memorize","_shouldPropagate","validateListener","fnName","replace","_registerListener","binding","prevIndex","_indexOfListener","_addBinding","n","splice","cur","addOnce","removeAll","getNumListeners","halt","_i","arguments","bindings","forget","states","currentKey","_q","requestState","key","StateObj","checkState","warn","create","error","idxOnes","view","world","mouse","keys","pads","components","componentDefinitions","numComponents","innerWidth","innerHeight","expect","entity","prop","Clazz","accessor","addComponent","info","toUpperCase","registerComponents","factoryList","k","Factory","exportedComponents","className","proto","index","compDef","options","arr","compInstance","hasOwnProperty","removeComponent","depth","scale","gravity","friction","elapsed","broadphase","map","mainCamera","cameras","DualPool","classConstructor","instanceSettings","initSize","_Class","_freeList","_busyList","_settings","pool","size","get","recycle","freeAll","debugDraw","circle","ctx","x","y","radius","color","beginPath","arc","util","TAU","lineWidth","strokeStyle","stroke","point","p","fillStyle","fill","vector","v","offsetVec","moveTo","lineTo","vectorLine","fromV","toV","rectangle","sizeX","sizeY","strokeRect","PI","DEG_TO_RAD","RAD_TO_DEG","clamp","val","min","max","sign","abs","randomInt","normalize","getShortRotation","angle","generateID","isPlainObject","nodeType","Object","call","err","merge","target","src","array","Array","isArray","dst","forEach","e","indexOf","nwf","system","Performance","elapsedTime","performance","empty","lastChild","removeChild","radixSort","idxBegin","idxEnd","bit","idx","mask","tmp"],"mappings":"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","file":"motorhaus.min.js","sourcesContent":["window.mh = {\n\tversion: '0.5.0'\n};\n","/*\n\tAll game objects must extend this, since many core components assume these properties exist on everything.\n*/\nmh.Base = function() {\n\tthis.uuid = Math.random().toString(36).slice(2) + Date.now();\n\tthis.active = false;\n};\n","/*\n\tThe Engine holds the state manager, fires it off when the document is ready, and runs the one and only update loop. It ties all the other core modules together, setting everything up.\n\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.Engine = function() {\n\tif (mh.kai.debugMessages) {\n\t\tconsole.log('[Engine] Initializing');\n\t}\n\n\t// a place to hold component definitions for fast reference\n\tmh.Component = {};\n\n\tthis.state = new mh.StateManager();\n\n\tthis._paused = false;\n\n\t// dom init\n\tvar self = this;\n\tthis._onInit = function() {\n\t\treturn self.init();\n\t};\n\n\tif (document.readyState === 'complete' || document.readyState === 'interactive') {\n\t\twindow.setTimeout(this._onInit, 0);\n\t}\n\telse {\n\t\tdocument.addEventListener('DOMContentLoaded', this._onInit, false);\n\t\twindow.addEventListener('load', this._onInit, false);\n\t}\n};\n\nmh.Engine.prototype = {\n\tconstructor: mh.Engine,\n\n\tinit: function() {\n\t\tif (mh.kai.ready) {\n\t\t\treturn;\n\t\t}\n\t\tvar self = this;\n\t\tif (!document.body) {\n\t\t\twindow.setTimeout(this._onInit, 20);\n\t\t\treturn;\n\t\t}\n\n\t\tdocument.removeEventListener('DOMContentLoaded', this._onInit);\n\t\twindow.removeEventListener('load', this._onInit);\n\n\t\twindow.addEventListener('focus', function(evt) {\n\t\t\tself._paused = false;\n\t\t\tmh.tower.resume.dispatch();\n\t\t}, false);\n\t\twindow.addEventListener('blur', function(evt) {\n\t\t\tself._paused = true;\n\t\t\tmh.tower.pause.dispatch();\n\t\t}, false);\n\n\t\t// init global components\n\t\tmh.kai.engine = this;\n\n\t\tmh.kai.ready = true;\n\n\t\tthis.state.init();\n\n\t\tmh.kai.inputBlocked = false;\n\n\t\tif (mh.kai.debugMessages) {\n\t\t\tconsole.log('[Engine] Ready');\n\t\t}\n\n\t\tthis.updateBound = this.update.bind(this);\n\t\tthis.updateBound();\n\t},\n\n\t/**\n\t * Set the first state to be used when everything is ready.\n\t */\n\tstart: function(state) {\n\t\tif (mh.kai.ready) {\n\t\t\t// state init would have already been called in this case\n\t\t\treturn;\n\t\t}\n\t\tthis.state.queue(state);\n\t\tthis.state.next();\n\t},\n\n\tupdate: function() {\n\t\tvar i, node, obj,\n\t\t\tlist = mh.kai.componentsSorted,\n\t\t\tlen = list.length;\n\n\t\tif (this._paused) {\n\t\t\t// going to freeze it on the last frame\n\t\t\t// TODO: update a pause state? or remove this check and have the current state handle it through signals?\n\t\t\trequestAnimationFrame(this.updateBound);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.state.ready) {\n\t\t\tif (mh.kai.debugCtx) {\n\t\t\t\tmh.kai.debugCtx.clearRect(0, 0, mh.kai.width, mh.kai.height);\n\t\t\t}\n\t\t\t// go through each list of components\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (!list[i]) continue;\n\n\t\t\t\t// and update each component within this list\n\t\t\t\tnode = list[i].first;\n\n\t\t\t\tif (node && !node.obj.update) {\n\t\t\t\t\t// this component type doesn't have an update function\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\twhile (node) {\n\t\t\t\t\tobj = node.obj;\n\t\t\t\t\tif (obj.active) {\n\t\t\t\t\t\tobj.update();\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// go through the components that are registered with a postUpdate()\n\t\t\t/*list = mh.kai.postComponents;\n\t\t\tlen = list.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (!list[i]) continue;\n\n\t\t\t\tnode = list[i].first;\n\t\t\t\twhile (node) {\n\t\t\t\t\tobj = node.obj;\n\t\t\t\t\tif (obj.active) {\n\t\t\t\t\t\tobj.postUpdate();\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.next;\n\t\t\t\t}\n\t\t\t}*/\n\n\t\t\t// update the state now that all components are fresh\n\t\t\tthis.state.current.update();\n\t\t}\n\n\t\trequestAnimationFrame(this.updateBound);\n\t},\n\n\tdispose: function() {\n\t\t// this.state.dispose();\n\n\t\t// dispose components\n\n\t\t// null references\n\t}\n};\n","/**\n * @source https://github.com/martinwells/gamecore.js\n */\n mh.LinkedListNode = function() {\n\tthis.obj = null; // the object reference\n\tthis.next = null; // link to next object in the list\n\tthis.prev = null; // link to previous object in the list\n\tthis.free = true;\n};\n\n/**\n * @description\n * A high-speed doubly linked list of objects. Note that for speed reasons (using a dictionary lookup of\n * cached nodes) there can only be a single instance of an object in the list at the same time. Adding the same\n * object a second time will result in a silent return from the add method.\n * <p>\n * In order to keep a track of node links, an object must be able to identify itself with a uuid function.\n * <p>\n * To add an item use:\n * <pre><code>\n *   list.add(newItem);\n * </code></pre>\n * <p>\n * You can iterate using the first and next members, such as:\n * <pre><code>\n *   var node = list.first;\n *   while (node)\n *   {\n *       node.object().DOSOMETHING();\n *       node = node.next();\n *   }\n * </code></pre>\n */\nmh.LinkedList = function() {\n\tthis.first = null;\n\tthis.last = null;\n\tthis.length = 0;\n\tthis.objToNodeMap = {}; // a quick lookup list to map linked list nodes to objects\n\tthis.uuid = Date.now() + '' + Math.floor(Math.random()*1000);\n\tthis.priority = 0; // used by Kai to sort component list such that some are updated before others\n};\n\nmh.LinkedList.prototype = {\n\tconstructor: mh.LinkedList,\n\n\t/**\n\t * Get the LinkedListNode for this object.\n\t * @param obj The object to get the node for\n\t */\n\tgetNode: function(obj) {\n\t\t// objects added to a list must implement a getUniqueId which returns a unique object identifier string\n\t\treturn this.objToNodeMap[obj.uuid];\n\t},\n\n\t/**\n\t * Adds a specific node to the list -- typically only used internally unless you're doing something funky\n\t * Use add() to add an object to the list, not this.\n\t */\n\taddNode: function(obj) {\n\t\tvar node = new mh.LinkedListNode();\n\t\tnode.obj = obj;\n\t\tnode.prev = null;\n\t\tnode.next = null;\n\t\tnode.free = false;\n\t\tthis.objToNodeMap[obj.uuid] = node;\n\t\treturn node;\n\t},\n\n\tswapObjects: function(node, newObj) {\n\t\tthis.objToNodeMap[node.obj.uuid] = null;\n\t\tthis.objToNodeMap[newObj.uuid] = node;\n\t\tnode.obj = newObj;\n\t},\n\n\t/**\n\t * Add an item to the list\n\t * @param obj The object to add\n\t */\n\tadd: function(obj) {\n\t\tvar node = this.objToNodeMap[obj.uuid];\n\n\t\tif (!node) {\n\t\t\tnode = this.addNode(obj);\n\t\t}\n\t\telse {\n\t\t\tif (node.free === false) return;\n\n\t\t\t// reusing a node, so we clean it up\n\t\t\t// this caching of node/object pairs is the reason an object can only exist\n\t\t\t// once in a list -- which also makes things faster (not always creating new node\n\t\t\t// object every time objects are moving on and off the list\n\t\t\tnode.obj = obj;\n\t\t\tnode.free = false;\n\t\t\tnode.next = null;\n\t\t\tnode.prev = null;\n\t\t}\n\n\t\t// append this obj to the end of the list\n\t\tif (!this.first) { // is this the first?\n\t\t\tthis.first = node;\n\t\t\tthis.last = node;\n\t\t\tnode.next = null; // clear just in case\n\t\t\tnode.prev = null;\n\t\t}\n\t\telse {\n\t\t\tif (this.last == null) {\n\t\t\t\tthrow new Error(\"Hmm, no last in the list -- that shouldn't happen here\");\n\t\t\t}\n\n\t\t\t// add this entry to the end of the list\n\t\t\tthis.last.next = node; // current end of list points to the new end\n\t\t\tnode.prev = this.last;\n\t\t\tthis.last = node;            // new object to add becomes last in the list\n\t\t\tnode.next = null;      // just in case this was previously set\n\t\t}\n\t\tthis.length++;\n\n\t\tif (this.showDebug) this.dump('after add');\n\t},\n\n\thas: function(obj) {\n\t\treturn !!this.objToNodeMap[obj.uuid];\n\t},\n\n\t/**\n\t * Moves this item upwards in the list\n\t * @param obj\n\t */\n\tmoveUp: function(obj) {\n\t\tthis.dump('before move up');\n\t\tvar c = this.getNode(obj);\n\t\tif (!c) throw \"Oops, trying to move an object that isn't in the list\";\n\t\tif (c.prev == null) return; // already first, ignore\n\n\t\t// This operation makes C swap places with B:\n\t\t// A <-> B <-> C <-> D\n\t\t// A <-> C <-> B <-> D\n\n\t\tvar b = c.prev;\n\t\tvar a = b.prev;\n\n\t\t// fix last\n\t\tif (c == this.last) this.last = b;\n\n\t\tvar oldCNext = c.next;\n\n\t\tif (a) a.next = c;\n\t\tc.next = b;\n\t\tc.prev = b.prev;\n\n\t\tb.next = oldCNext;\n\t\tb.prev = c;\n\n\t\t// check to see if we are now first\n\t\tif (this.first == b) this.first = c;\n\t},\n\n\t/**\n\t * Moves this item downwards in the list\n\t * @param obj\n\t */\n\tmoveDown: function(obj) {\n\t\tvar b = this.getNode(obj);\n\t\tif (!b) throw \"Oops, trying to move an object that isn't in the list\";\n\t\tif (b.next == null) return; // already last, ignore\n\n\t\t// This operation makes B swap places with C:\n\t\t// A <-> B <-> C <-> D\n\t\t// A <-> C <-> B <-> D\n\n\t\tvar c = b.next;\n\t\tthis.moveUp(c.obj);\n\n\t\t// check to see if we are now last\n\t\tif (this.last == c) this.last = b;\n\t},\n\n\t/**\n\t * Take everything off the list and put it in an array, sort it, then put it back.\n\t */\n\tsort: function(compare) {\n\t\tvar sortArray = [];\n\t\tvar i, l, node = this.first;\n\n\t\twhile (node) {\n\t\t\tsortArray.push(node.object());\n\t\t\tnode = node.next();\n\t\t}\n\n\t\tthis.clear();\n\n\t\tsortArray.sort(compare);\n\n\t\tl = sortArray.length;\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tthis.add(sortArray[i]);\n\t\t}\n\t},\n\n\t/**\n\t * Removes an item from the list\n\t * @param obj The object to remove\n\t * @returns boolean true if the item was removed, false if the item was not on the list\n\t */\n\tremove: function(obj) {\n\t\tvar node = this.getNode(obj);\n\t\tif (node == null || node.free == true) {\n\t\t\treturn false; // ignore this error (trying to remove something not there)\n\t\t}\n\n\t\t// pull this object out and tie up the ends\n\t\tif (node.prev != null)\n\t\t\tnode.prev.next = node.next;\n\t\tif (node.next != null)\n\t\t\tnode.next.prev = node.prev;\n\n\t\t// fix first and last\n\t\tif (node.prev == null) // if this was first on the list\n\t\t\tthis.first = node.next; // make the next on the list first (can be null)\n\t\tif (node.next == null) // if this was the last\n\t\t\tthis.last = node.prev; // then this node's previous becomes last\n\n\t\tnode.free = true;\n\t\tnode.prev = null;\n\t\tnode.next = null;\n\n\t\tthis.length--;\n\n\t\treturn true;\n\t},\n\n\t// remove the head and return it's object\n\tshift: function() {\n\t\tvar node = this.first;\n\t\tif (this.length === 0) return null;\n\t\t// if (node == null || node.free == true) return null;\n\n\t\t// pull this object out and tie up the ends\n\t\tif (node.prev) {\n\t\t\tnode.prev.next = node.next;\n\t\t}\n\t\tif (node.next) {\n\t\t\tnode.next.prev = node.prev;\n\t\t}\n\n\t\t// make the next on the list first (can be null)\n\t\tthis.first = node.next;\n\t\tif (!node.next) this.last = null; // make sure we clear this\n\n\t\tnode.free = true;\n\t\tnode.prev = null;\n\t\tnode.next = null;\n\n\t\tthis.length--;\n\t\treturn node.obj;\n\t},\n\n\t// remove the tail and return it's object\n\tpop: function() {\n\t\tvar node = this.last;\n\t\tif (this.length === 0) return null;\n\n\t\t// pull this object out and tie up the ends\n\t\tif (node.prev) {\n\t\t\tnode.prev.next = node.next;\n\t\t}\n\t\tif (node.next) {\n\t\t\tnode.next.prev = node.prev;\n\t\t}\n\n\t\t// this node's previous becomes last\n\t\tthis.last = node.prev;\n\t\tif (!node.prev) this.first = null; // make sure we clear this\n\n\t\tnode.free = true;\n\t\tnode.prev = null;\n\t\tnode.next = null;\n\n\t\tthis.length--;\n\t\treturn node.obj;\n\t},\n\n\t/**\n\t * Add the passed list to this list, leaving it untouched.\n\t */\n\tconcat: function(list) {\n\t\tvar node = list.first;\n\t\twhile (node) {\n\t\t\tthis.add(node.obj);\n\t\t\tnode = node.next;\n\t\t}\n\t},\n\n\t/**\n\t * Clears the list out\n\t */\n\tclear: function() {\n\t\tvar next = this.first;\n\n\t\twhile (next) {\n\t\t\tnext.free = true;\n\t\t\tnext = next.next;\n\t\t}\n\n\t\tthis.first = null;\n\t\tthis.length = 0;\n\t},\n\n\tdispose: function() {\n\t\tvar next = this.first;\n\n\t\twhile (next) {\n\t\t\tnext.obj = null;\n\t\t\tnext = next.next;\n\t\t}\n\t\tthis.first = null;\n\n\t\tthis.objToNodeMap = null;\n\t},\n\n\t/**\n\t * Outputs the contents of the current list for debugging.\n\t */\n\tdump: function(msg) {\n\t\tconsole.log('====================' + msg + '=====================');\n\t\tvar a = this.first;\n\t\twhile (a != null) {\n\t\t\tconsole.log('{' + a.obj.toString() + '} previous=' + (a.prev ? a.prev.obj : 'NULL'));\n\t\t\ta = a.next();\n\t\t}\n\t\tconsole.log('===================================');\n\t\tconsole.log('Last: {' + (this.last ? this.last.obj : 'NULL') + '} ' +\n\t\t\t'First: {' + (this.first ? this.first.obj : 'NULL') + '}');\n\t},\n};\n","mh.SignalBinding = function(signal, listener, isOnce, listenerContext, priority) {\n\tif (typeof priority === 'undefined') { priority = 0; }\n\tthis.active = true;\n\tthis.params = null;\n\tthis._listener = listener;\n\tthis._isOnce = isOnce;\n\tthis.context = listenerContext;\n\tthis._signal = signal;\n\tthis.priority = priority || 0;\n};\n\nmh.SignalBinding.prototype ={\n\tconstructor: mh.SignalBinding,\n\n\texecute: function(paramsArr) {\n\t\tvar handlerReturn;\n\t\tvar params;\n\n\t\tif (this.active && !!this._listener) {\n\t\t\tparams = this.params ? this.params.concat(paramsArr) : paramsArr;\n\n\t\t\thandlerReturn = this._listener.apply(this.context, params);\n\n\t\t\tif (this._isOnce) {\n\t\t\t\tthis.detach();\n\t\t\t}\n\t\t}\n\n\t\treturn handlerReturn;\n\t},\n\n\tdetach: function() {\n\t\treturn this.isBound() ? this._signal.remove(this._listener, this.context) : null;\n\t},\n\n\tisBound: function() {\n\t\treturn (!!this._signal && !!this._listener);\n\t},\n\n\tisOnce: function() {\n\t\treturn this._isOnce;\n\t},\n\n\tgetListener: function() {\n\t\treturn this._listener;\n\t},\n\n\tgetSignal: function() {\n\t\treturn this._signal;\n\t},\n\n\t_destroy: function() {\n\t\tdelete this._signal;\n\t\tdelete this._listener;\n\t\tdelete this.context;\n\t},\n\n\ttoString: function() {\n\t\treturn '[SignalBinding isOnce:' + this._isOnce + ', isBound:' + this.isBound() + ', active:' + this.active + ']';\n\t}\n};\n\nmh.Signal = function() {\n\tthis._bindings = [];\n\tthis._prevParams = null;\n\tthis.memorize = false;\n\tthis._shouldPropagate = true;\n\tthis.active = true;\n},\n\nmh.Signal.prototype = {\n\tconstructor: mh.Signal,\n\n\tvalidateListener: function(listener, fnName) {\n\t\tif (typeof listener !== 'function') {\n\t\t\tthrow new Error('listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName));\n\t\t}\n\t},\n\n\t_registerListener: function(listener, isOnce, listenerContext, priority) {\n\t\tvar prevIndex = this._indexOfListener(listener, listenerContext);\n\t\tvar binding;\n\n\t\tif (prevIndex !== -1) {\n\t\t\tbinding = this._bindings[prevIndex];\n\n\t\t\tif (binding.isOnce() !== isOnce) {\n\t\t\t\tthrow new Error('You cannot add' + (isOnce ? '' : 'Once') + '() then add' + (!isOnce ? '' : 'Once') + '() the same listener without removing the relationship first.');\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tbinding = new mh.SignalBinding(this, listener, isOnce, listenerContext, priority);\n\n\t\t\tthis._addBinding(binding);\n\t\t}\n\n\t\tif (this.memorize && this._prevParams) {\n\t\t\tbinding.execute(this._prevParams);\n\t\t}\n\n\t\treturn binding;\n\t},\n\n\t_addBinding: function(binding) {\n\t\tvar n = this._bindings.length;\n\n\t\tdo {\n\t\t\t--n;\n\t\t}\n\t\twhile (this._bindings[n] && binding.priority <= this._bindings[n].priority);\n\n\t\tthis._bindings.splice(n + 1, 0, binding);\n\t},\n\n\t_indexOfListener: function(listener, context) {\n\t\tvar n = this._bindings.length;\n\t\tvar cur;\n\n\t\twhile (n--) {\n\t\t\tcur = this._bindings[n];\n\n\t\t\tif (cur.getListener() === listener && cur.context === context) {\n\t\t\t\treturn n;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\thas: function(listener, context) {\n\t\tif (typeof context === 'undefined') { context = null; }\n\t\treturn this._indexOfListener(listener, context) !== -1;\n\t},\n\n\tadd: function(listener, listenerContext, priority) {\n\t\tif (typeof listenerContext === 'undefined') { listenerContext = null; }\n\t\tif (typeof priority === 'undefined') { priority = 0; }\n\t\tthis.validateListener(listener, 'add');\n\n\t\treturn this._registerListener(listener, false, listenerContext, priority);\n\t},\n\n\taddOnce: function(listener, listenerContext, priority) {\n\t\tif (typeof listenerContext === 'undefined') { listenerContext = null; }\n\t\tif (typeof priority === 'undefined') { priority = 0; }\n\t\tthis.validateListener(listener, 'addOnce');\n\n\t\treturn this._registerListener(listener, true, listenerContext, priority);\n\t},\n\n\tremove: function(listener, context) {\n\t\tif (typeof context === 'undefined') { context = null; }\n\t\tthis.validateListener(listener, 'remove');\n\n\t\tvar i = this._indexOfListener(listener, context);\n\n\t\tif (i !== -1) {\n\t\t\tthis._bindings[i]._destroy();\n\t\t\tthis._bindings.splice(i, 1);\n\t\t}\n\n\t\treturn listener;\n\t},\n\n\tremoveAll: function() {\n\t\tvar n = this._bindings.length;\n\n\t\twhile (n--) {\n\t\t\tthis._bindings[n]._destroy();\n\t\t}\n\n\t\tthis._bindings.length = 0;\n\t},\n\n\tgetNumListeners: function() {\n\t\treturn this._bindings.length;\n\t},\n\n\thalt: function() {\n\t\tthis._shouldPropagate = false;\n\t},\n\n\tdispatch: function() {\n\t\tvar paramsArr = [];\n\t\tfor (var _i = 0; _i < (arguments.length - 0); _i++) {\n\t\t\tparamsArr[_i] = arguments[_i + 0];\n\t\t}\n\t\tif (!this.active) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar n = this._bindings.length;\n\t\tvar bindings;\n\n\t\tif (this.memorize) {\n\t\t\tthis._prevParams = paramsArr;\n\t\t}\n\n\t\tif (!n) {\n\t\t\treturn;\n\t\t}\n\n\t\tbindings = this._bindings.slice(0);\n\n\t\tthis._shouldPropagate = true;\n\n\t\tdo {\n\t\t\tn--;\n\t\t} while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n\t},\n\n\tforget: function() {\n\t\tthis._prevParams = null;\n\t},\n\n\tdispose: function() {\n\t\tthis.removeAll();\n\n\t\tdelete this._bindings;\n\t\tdelete this._prevParams;\n\t},\n\n\ttoString: function() {\n\t\treturn '[Signal active:' + this.active + ' numListeners:' + this.getNumListeners() + ']';\n\t}\n};\n","/*\n\tHandles game state life cycles. Also acts as proxy between the Engine and States.\n\tIt operates through Signals found in mh.tower.\n\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\n\nmh.StateManager = function() {\n\tthis.states = {};\n\tthis.current = null;\n\tthis.currentKey = null;\n\tthis.ready = false;\n\n\t// list for keeping track of active and pending states.\n\tthis._q = [];\n};\n\nmh.StateManager.prototype = {\n\tconstructor: mh.StateManager,\n\n\t/**\n\t * Called by Engine when it first starts up.\n\t */\n\tinit: function() {\n\t\tmh.tower.requestState.add(function(key) {\n\t\t\tthis.queue(key);\n\t\t\tthis.next();\n\t\t}, this);\n\n\t\tthis.next();\n\t},\n\n\t/**\n\t * Add a new State by instantiating and storing it in an array for later access.\n\t * This is actually a really dumb thing to do, so I'll be changing it soon.\n\t *\n\t * @param key {string} - A unique key you use to reference this state, i.e. \"MainMenu\", \"Level1\".\n\t * @param state {State} - The state you want to switch to.\n\t */\n\tadd: function(key, StateObj) {\n\t\tif (this.checkState(key, StateObj) === false) {\n\t\t\treturn;\n\t\t}\n\t\tthis.states[key] = StateObj;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Delete the given state. Not at all safe to actually use.\n\t * @param {string} key - A unique key you use to reference this state, i.e. \"MainMenu\", \"Level1\".\n\t */\n\tremove: function(key) {\n\t\tdelete this.states[key];\n\t},\n\n\t/**\n\t * Load next state in queue. Received through CommTower.\n\t * @param {string} [key] - State name to load (as set in engine.state.add())\n\t */\n\tqueue: function(key) {\n\t\tif (!this.states[key]) {\n\t\t\tconsole.warn('[StateManager.queue] '+key+' not found; add it first');\n\t\t\treturn;\n\t\t}\n\t\tthis._q.push(key);\n\n\t\treturn this;\n\t},\n\n\tnext: function() {\n\t\tif (this._q.length === 0 || mh.kai.ready === false) {\n\t\t\tconsole.log('[StateManager.next] _q length: '+this._q.length+'; Engine ready: '+mh.kai.ready);\n\t\t\treturn;\n\t\t}\n\t\tthis.ready = false;\n\t\tmh.kai.inputBlocked = true;\n\n\t\tif (this.currentKey) {\n\t\t\tthis.current = this.states[this.currentKey];\n\t\t\tthis.current.dispose();\n\t\t}\n\n\t\tthis.currentKey = this._q.shift();\n\t\tthis.current = this.states[this.currentKey];\n\t\tthis.current.create();\n\n\t\tmh.kai.inputBlocked = false;\n\t\tthis.ready = true;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Make sure the state has everything it needs to function.\n\t * @param {Object} state\n\t */\n\tcheckState: function(key, state) {\n\t\tif (this.states[key]) {\n\t\t\tconsole.error('[StateManager.checkState] Duplicate key: ' + key);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof state === 'function') {\n\t\t\tconsole.error('[StateManager.checkState] States must be object literals, not functions');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (state) {\n\t\t\tif (state.create && state.update && state.dispose) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconsole.error('[StateManager.checkState] Invalid State \"'+key+'\" given. Must contain all required functions: create, update, dispose');\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tconsole.error('[StateManager.checkState] No state found with the key: ' + key);\n\t\t\treturn false;\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\tthis.states = null;\n\t\tthis.idxOnes = null;\n\t}\n};\n","/*\n\tGlobal state resources object that also manages components. No idea why I called it 'Kai'.\n\tI consider this the most important part of the engine, since it makes the whole entity-component thing work.\n\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.kai = {\n\tengine: null,\n\tview: null, // the graphics manager (THREE.Scene or PIXI.Stage)\n\tworld: null, // optional, defined in states\n\n\tmouse: null,\n\tkeys: null,\n\tpads: null, // optional GamepadController, if you want\n\n\tdebugCtx: null, // optional, for debug drawing components\n\tdebugMessages: true, // will log core activity if true\n\n\tcomponents: [], // we manipulate lists of ALL components here (even postUpdate ones)...\n\tcomponentsSorted: [], // ...but Engine iterates through this array which is sorted by update priority\n\t// postComponents: [], // this is also sorted, but we merely reference lists from this.components\n\tcomponentDefinitions: [],\n\tnumComponents: 0,\n\n\twidth: window.innerWidth, // screen size (in pixels); renderer or state usually sets this\n\theight: window.innerHeight,\n\n\tready: false, // true when all systems are go\n\tinputBlocked: true, // always block input while states are loading\n\n\t/*\n\t\tVery handy utility that not only makes sure the entity has the component you're looking for, but will add it to the entity for you if it isn't already there. If the component doesn't exist (which happens a lot when creating a lot of components, as you forget to add them to the definition module, such as VonComponents), it will kindly remind you.\n\t\tIf you're not looking for a component and instead expect a regular type of object, pass in that object's prototype as the third parameter and it will either return what's already on the entity, or instantiate it for you.\n\t */\n\texpect: function(entity, prop, Clazz) {\n\t\tvar i;\n\t\tif (!entity[prop]) {\n\t\t\tif (!Clazz) {\n\t\t\t\t// assume it's a component, so try to find it\n\t\t\t\tfor (i = 0; i < this.componentDefinitions.length; i++) {\n\t\t\t\t\tClazz = this.componentDefinitions[i];\n\t\t\t\t\tif (Clazz.accessor === prop) {\n\t\t\t\t\t\t// it's registered, so let's take this instance to use for its static properties to register a new one with\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!Clazz) {\n\t\t\t\t\t// didn't find it, must not have been registered yet\n\t\t\t\t\tthrow new Error('[Kai.expect] The component \"'+prop+'\" does not exist. You might have forgotten to create a component list object (just like VonComponents.js), or forgot to add this component to that list.');\n\t\t\t\t}\n\n\t\t\t\t// add it for them\n\t\t\t\tthis.addComponent(entity, Clazz);\n\t\t\t\tif (this.debugMessages) {\n\t\t\t\t\tconsole.info('[Kai.expect] '+prop.toUpperCase()+' component was added to '+entity.toString()+' with default values');\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// just an object we can instantiate directly\n\t\t\t\tentity[prop] = new Clazz();\n\t\t\t\t/*if (this.debugMessages) {\n\t\t\t\t\tconsole.info('[Kai.expect] A \"'+prop+'\" property was added to '+entity.toString()+' for you');\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// return the entity's reference to the object so it can be shared with other components\n\t\treturn entity[prop];\n\t},\n\n\t/*\n\t\tUtility that properly constructs a hash from the passed array of prototypes, so it can be used by addComponent.\n\t\tCreates a new home for a specific component type, where all instances of it will live and be accessed from in Engine's `update()`.\n\t*/\n\tregisterComponents: function(factoryList) {\n\t\tvar i, k, list, len = factoryList.length,\n\t\t\tFactory, exportedComponents = {};\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tFactory = factoryList[i];\n\n\n\t\t\tk = this.numComponents;\n\t\t\texportedComponents[Factory.className] = {\n\t\t\t\taccessor: Factory.accessor,\n\t\t\t\tproto: Factory,\n\t\t\t\tindex: k,\n\t\t\t\tpriority: Factory.priority // this is only used for sorting below\n\t\t\t};\n\t\t\t// we track number of components so that we can make multiple calls to this.registerComponents\n\t\t\t// and not overwrite the previous components. this is necessary for supporting external component types\n\t\t\tthis.numComponents++;\n\n\t\t\tif (this.components[k]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlist = new mh.LinkedList();\n\t\t\tlist.priority = Factory.priority;\n\t\t\t// the order of this.components and this.componentDefinitions is extremely important,\n\t\t\t// otherwise we'd be adding one component type into a list belonging to another component type...\n\t\t\tthis.components[k] = list;\n\t\t\tthis.componentDefinitions[k] = exportedComponents[Factory.className];\n\t\t\t// fast access to all components\n\t\t\tmh.Component[Factory.className] = exportedComponents[Factory.className];\n\n\t\t\t// ...which is why we need to keep a different array of the lists that we *can* sort without\n\t\t\t// causing a ruckus. once lists are created, we only add/remove instances to this.components, but\n\t\t\t// they will also show up in this other sorted array, so everything works out\n\t\t\tthis.componentsSorted[k] = list;\n\t\t\t/*if (Factory.post) {\n\t\t\t\tthis.postComponents.push(list);\n\t\t\t}*/\n\n\t\t\tif (this.debugMessages) {\n\t\t\t\tconsole.info('[Kai] Registered '+Factory.className);\n\t\t\t}\n\t\t}\n\n\t\t// sort arrays according to component priority; these are the ones we'll loop through in Engine\n\t\tfunction compare(a, b) {\n\t\t\treturn a.priority - b.priority;\n\t\t}\n\t\tthis.componentsSorted.sort(compare);\n\t\t// this.postComponents.sort(compare);\n\n\t\treturn exportedComponents;\n\t},\n\n\t/*\n\t\tarr is an optional param, where the component will push itself to if present, otherwise it will attach directly to the entity\n\t*/\n\taddComponent: function(entity, compDef, options, arr) {\n\t\tvar prop = compDef.accessor,\n\t\t\tcompInstance = null;\n\n\t\toptions = options || null;\n\n\t\tif (entity.hasOwnProperty(prop)) {\n\t\t\tif (this.debugMessages) {\n\t\t\t\tconsole.warn('[Kai.addComponent] \"'+prop+'\" already exists on entity '+entity.toString());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tcompInstance = new compDef.proto(entity, options); // eslint-disable-line new-cap\n\t\tthis.components[compDef.index].add(compInstance);\n\n\t\tif (typeof arr === 'undefined') {\n\t\t\tentity[prop] = compInstance;\n\n\t\t}\n\t\telse {\n\t\t\tarr.push(compInstance);\n\t\t}\n\t},\n\n\t/*\n\t\tCall this in your entity's `dispose()`, otherwise it will pollute the list and cause the Engine to iterate through more objects than it has to, which could lead to performance degradation.\n\t*/\n\tremoveComponent: function(entity, compDef) {\n\t\tvar prop = compDef.accessor;\n\n\t\tif (entity.hasOwnProperty(prop)) {\n\t\t\tthis.components[compDef.index].remove(entity[prop]);\n\t\t\tentity[prop].dispose();\n\t\t\tentity[prop] = null;\n\t\t}\n\t}\n};\n","/*\n\tA \"communications tower\", or global collection of signals that are integral to the operation of the engine.\n*/\nmh.tower = {\n\trequestState: new mh.Signal(),\n\tpause: new mh.Signal(),\n\tresume: new mh.Signal()\n};\n","/*\n\tSingleton/POJO that describes the physical properties of any given game world,\n\tas well as references to common objects.\n*/\nmh.world = {\n\twidth: 1,\n\theight: 1,\n\tdepth: 1,\n\n\tscale: 1,\n\tgravity: 8,\n\tfriction: 0.98,\n\n\telapsed: 0.01666,\n\n\tbroadphase: null,\n\tmap: null,\n\n\tmainCamera: null,\n\tcameras: null\n};\n","/*\n\tA fast (LinkedList-based), minimal object pooling system.\n\tUses two lists to maintain used and unused objects, and expands dynamically.\n\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.DualPool = function(classConstructor, instanceSettings, initSize) {\n\tthis._Class = classConstructor;\n\tthis._freeList = new mh.LinkedList();\n\tthis._busyList = new mh.LinkedList();\n\tthis._settings = instanceSettings || {};\n\tthis._settings.pool = this;\n\n\tthis.size = initSize;\n\n\tfor (var i = 0; i < this.size; i++) {\n\t\tthis._freeList.add(new this._Class(this._settings));\n\t}\n};\n\nmh.DualPool.prototype = {\n\tconstructor: mh.DualPool,\n\n\tget: function() {\n\t\tvar obj;\n\t\tif (this._freeList.length) {\n\t\t\tobj = this._freeList.pop();\n\t\t\tthis._busyList.add(obj);\n\t\t\treturn obj;\n\t\t}\n\n\t\t// grow\n\t\tobj = new this._Class(this._settings);\n\t\tthis._busyList.add(obj);\n\t\tthis.size++;\n\t\t// console.log('[DualPool.get] Free: '+this._freeList.length+'; Busy: '+this._busyList.length);\n\n\t\treturn obj;\n\t},\n\n\trecycle: function(obj) {\n\t\tif (this._busyList.has(obj)) {\n\t\t\tthis._busyList.remove(obj);\n\t\t\tthis._freeList.add(obj);\n\n\t\t} /*else {\n\t\t\t// already in free, or not in either list\n\t\t\tconsole.log('[DualPool.recycle] Object ignored');\n\t\t}*/\n\t\t// console.log('[DualPool.recycle] Free: '+this._freeList.length+'; Busy: '+this._busyList.length);\n\t},\n\n\tfreeAll: function() {\n\t\tvar obj, node = this._busyList.first;\n\t\twhile (node) {\n\t\t\tobj = node.obj;\n\t\t\tthis._busyList.remove(obj);\n\t\t\tthis._freeList.add(obj);\n\t\t\tnode = node.next;\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\tthis._freeList.dispose();\n\t\tthis._busyList.dispose();\n\t\tthis._freeList = null;\n\t\tthis._busyList = null;\n\t\tthis._Class = null;\n\t\tthis._settings = null;\n\t},\n\n\ttoString: function() {\n\t\treturn '[DualPool size: '+this.size+', free: '+this._freeList.length+', busy: '+this._busyList.length+']';\n\t}\n};\n","mh.debugDraw = {\n\tcircle: function(ctx, x, y, radius, color) {\n\t\tcolor = color || 'rgb(200, 10, 30)';\n\t\tctx.beginPath();\n\t\tctx.arc(x, y, radius, 0, mh.util.TAU);\n\t\tctx.lineWidth = 1;\n\t\tctx.strokeStyle = color;\n\t\tctx.stroke();\n\t},\n\tpoint: function(ctx, p, radius, color) {\n\t\tcolor = color || 'rgb(200, 10, 30)';\n\t\tradius = radius || 3;\n\t\tctx.beginPath();\n\t\tctx.arc(p.x, p.y, radius, 0, mh.util.TAU);\n\t\tctx.fillStyle = color;\n\t\tctx.fill();\n\t},\n\tvector: function(ctx, v, offsetVec, color) {\n\t\tcolor = color || 'rgb(200, 10, 30)';\n\t\tctx.beginPath();\n\t\tctx.moveTo(offsetVec.x, offsetVec.y);\n\t\tctx.lineTo(v.x + offsetVec.x, v.y + offsetVec.y);\n\t\tctx.lineWidth = 1;\n\t\tctx.strokeStyle = color;\n\t\tctx.stroke();\n\t},\n\tvectorLine: function(ctx, fromV, toV, color) {\n\t\tcolor = color || 'rgb(200, 10, 30)';\n\t\tctx.beginPath();\n\t\tctx.moveTo(fromV.x, fromV.y);\n\t\tctx.lineTo(toV.x, toV.y);\n\t\tctx.lineWidth = 1;\n\t\tctx.strokeStyle = color;\n\t\tctx.stroke();\n\t},\n\trectangle: function(ctx, x, y, sizeX, sizeY, color) {\n\t\tcolor = color || 'rgb(200, 10, 30)';\n\t\tctx.beginPath();\n\t\tctx.lineWidth = 1;\n\t\tctx.strokeStyle = color;\n\t\tctx.strokeRect(x - (sizeX*0.5), y - (sizeY*0.5), sizeX, sizeY);\n\t}\n};\n","/*\n\tJavaScript utility functions\n\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.util = {\n\tPI: Math.PI,\n\tTAU: Math.PI * 2,\n\tDEG_TO_RAD: 0.0174532925,\n\tRAD_TO_DEG: 57.2957795,\n\n\tclamp: function(val, min, max) {\n\t\treturn Math.max(min, Math.min(max, val));\n\t},\n\n\tsign: function(val) {\n\t\treturn val && val / Math.abs(val);\n\t},\n\n\t/**\n\t * If one value is passed, it will return something from -val to val.\n\t * Else it returns a value between the range specified by min, max.\n\t */\n\trandom: function(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn (Math.random() * min) - (min * 0.5);\n\t\t}\n\t\treturn Math.random() * (max - min) + min;\n\t},\n\n\t// from min to (and including) max\n\trandomInt: function(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn Math.floor((Math.random() * min) - (min * 0.5));\n\t\t}\n\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\n\t},\n\n\tnormalize: function(v, min, max) {\n\t\treturn (v - min) / (max - min);\n\t},\n\n\tgetShortRotation: function(angle) {\n\t\tangle %= this.TAU;\n\t\tif (angle > this.PI) {\n\t\t\tangle -= this.TAU;\n\t\t}\n\t\telse if (angle < -this.PI) {\n\t\t\tangle += this.TAU;\n\t\t}\n\t\treturn angle;\n\t},\n\n\tgenerateID: function() {\n\t\treturn Math.random().toString(36).slice(2) + Date.now();\n\t},\n\n\tisPlainObject: function(obj) {\n\t\tif (typeof (obj) !== 'object' || obj.nodeType || obj === obj.window) {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\tif (obj.constructor && !Object.prototype.hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf')) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://github.com/KyleAMathews/deepmerge/blob/master/index.js\n\tmerge: function(target, src) {\n\t\tvar self = this, array = Array.isArray(src);\n\t\tvar dst = array && [] || {};\n\t\tif (array) {\n\t\t\ttarget = target || [];\n\t\t\tdst = dst.concat(target);\n\t\t\tsrc.forEach(function(e, i) {\n\t\t\t\tif (typeof dst[i] === 'undefined') {\n\t\t\t\t\tdst[i] = e;\n\t\t\t\t}\n\t\t\t\telse if (self.isPlainObject(e)) {\n\t\t\t\t\tdst[i] = self.merge(target[i], e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (target.indexOf(e) === -1) {\n\t\t\t\t\t\tdst.push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn dst;\n\t\t}\n\t\tif (target && self.isPlainObject(target)) {\n\t\t\tObject.keys(target).forEach(function(key) {\n\t\t\t\tdst[key] = target[key];\n\t\t\t});\n\t\t}\n\t\tObject.keys(src).forEach(function(key) {\n\t\t\tif (!src[key] || !self.isPlainObject(src[key])) {\n\t\t\t\tdst[key] = src[key];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdst[key] = self.merge(target[key], src[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn dst;\n\t},\n\n\tnow: function() {\n\t\treturn window.nwf ? window.nwf.system.Performance.elapsedTime : window.performance.now();\n\t},\n\n\tempty: function(node) {\n\t\twhile (node.lastChild) {\n\t\t\tnode.removeChild(node.lastChild);\n\t\t}\n\t},\n\n\t/*\n\t\t@source: http://jsperf.com/radix-sort\n\t */\n\tradixSort: function(arr, idxBegin, idxEnd, bit) {\n\t\tidxBegin = idxBegin || 0;\n\t\tidxEnd = idxEnd || arr.length;\n\t\tbit = bit || 31;\n\t\tif (idxBegin >= (idxEnd - 1) || bit < 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar idx = idxBegin;\n\t\tvar idxOnes = idxEnd;\n\t\tvar mask = 0x1 << bit;\n\t\twhile (idx < idxOnes) {\n\t\t\tif (arr[idx] & mask) {\n\t\t\t\t--idxOnes;\n\t\t\t\tvar tmp = arr[idx];\n\t\t\t\tarr[idx] = arr[idxOnes];\n\t\t\t\tarr[idxOnes] = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t++idx;\n\t\t\t}\n\t\t}\n\t\tthis.radixSort(arr, idxBegin, idxOnes, bit-1);\n\t\tthis.radixSort(arr, idxOnes, idxEnd, bit-1);\n\t}\n};\n"],"sourceRoot":"/source/"}