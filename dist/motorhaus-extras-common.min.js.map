{"version":3,"sources":["GamepadController.js","KeyboardController.js","MouseController.js","TwinStickMovement.js","XboxGamepad.js","Health.js","StackFSM.js"],"names":["mh","GamepadController","this","controllers","onConnect","Signal","onDisconnect","activeControllers","_controllerStatus","i","XboxGamepad","window","addEventListener","_onConnect","bind","_onDisconnect","prototype","constructor","update","ctrl","navigator","webkitGetGamepads","_scan","active","dispose","_addPad","gamepad","index","register","activate","dispatch","_removePad","unregister","evt","gamepads","length","setPad","KeyboardController","key","onDown","onUp","shift","_keys","_prev","document","_processDown","_processUp","keyCode","kai","inputBlocked","preventDefault","shiftKey","ctrlKey","isDown","duration","performance","now","timeDown","timeUp","justPressed","keycode","justReleased","A","charCodeAt","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_ENTER","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","COLON","EQUALS","UNDERSCORE","QUESTION_MARK","TILDE","OPEN_BRACKET","BACKWARD_SLASH","CLOSED_BRACKET","QUOTES","BACKSPACE","TAB","CLEAR","ENTER","SHIFT","CONTROL","ALT","CAPS_LOCK","ESC","SPACEBAR","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","UP","RIGHT","DOWN","INSERT","DELETE","HELP","NUM_LOCK","MouseController","position","Vec2","down","onMouseDown","onMouseUp","onMouseMove","onMouseContext","x","pageX","y","pageY","TwinStickMovement","entity","settings","Base","call","speed","pad","util","overwrite","accel","rotation","accessor","className","priority","disable","copy","leftAxis","multiplyScalar","rightAxis","id","leftTrigger","rightTrigger","axisTolerance","controller","buttons","_numButtons","_mozAxisOffset","_prevButtons","ctrlr","btn","leftX","axes","leftY","rightX","rightY","value","XBOX","LB","RB","LT","RT","SELECT","START","LSTICK","RSTICK","Health","max","overage","alive","onDeath","onDamage","onHeal","onFull","onActivate","_meter","change","amount","drain","deathSignal","StackFSM","state","stack","stateChanged","_activeContext","_activeFunction","_prevFunction","post","reset","pushState","ctx","push","popState","pop","name"],"mappings":"AAKAA,GAAAC,kBAAA,WACAC,KAAAC,eACAD,KAAAE,UAAA,GAAAJ,IAAAK,OACAH,KAAAI,aAAA,GAAAN,IAAAK,OACAH,KAAAK,kBAAA,EAGAL,KAAAM,oBAEA,KAAA,GAAAC,GAAA,EAAA,EAAAA,EAAAA,IACAP,KAAAC,YAAAM,GAAA,GAAAT,IAAAU,YAAAD,GACAP,KAAAM,kBAAAC,IAAA,CAGAE,QAAAC,iBAAA,mBAAAV,KAAAW,WAAAC,KAAAZ,OAAA,GACAS,OAAAC,iBAAA,sBAAAV,KAAAa,cAAAD,KAAAZ,OAAA,IAGAF,GAAAC,kBAAAe,WACAC,YAAAjB,GAAAC,kBAEAiB,OAAA,WACA,GAAAT,GAAAU,CAIA,KAHAC,UAAAC,mBACAnB,KAAAoB,QAEAb,EAAA,EAAA,EAAAA,EAAAA,IACAU,EAAAjB,KAAAC,YAAAM,GACAU,EAAAI,QACAJ,EAAAD,UAKAM,QAAA,WAEAtB,KAAAC,YAAA,KACAD,KAAAE,UAAAoB,UACAtB,KAAAI,aAAAkB,UACAtB,KAAAE,UAAA,KACAF,KAAAI,aAAA,KACAJ,KAAAM,kBAAA,MAGAiB,QAAA,SAAAC,GACA,GAAAP,GAAAjB,KAAAC,YAAAuB,EAAAC,MACAR,GAAAS,SAAAF,GACAP,EAAAU,WAEA3B,KAAAE,UAAA0B,SAAAX,GACAjB,KAAAK,qBAIAwB,WAAA,SAAAL,GACA,GAAAP,GAAAO,EAAAC,MAAAzB,KAAAC,YAAAuB,EAAAC,OAAAzB,KAAAC,YAAAuB,EACAP,GAAAa,aAEA9B,KAAAI,aAAAwB,SAAAX,GACAjB,KAAAK,qBAIAM,WAAA,SAAAoB,GACA/B,KAAAuB,QAAAQ,EAAAP,UAGAX,cAAA,SAAAkB,GACA/B,KAAA6B,WAAAE,EAAAP,UAGAJ,MAAA,WACA,GAAAb,GAAAyB,EAAAd,UAAAC,mBACA,KAAAZ,EAAA,EAAAA,EAAAyB,EAAAC,OAAA1B,IACAyB,EAAAzB,GACAP,KAAAM,kBAAAC,GAEAP,KAAAC,YAAAM,GAAA2B,OAAAF,EAAAzB,KAGAP,KAAAuB,QAAAS,EAAAzB,IACAP,KAAAM,kBAAAC,IAAA,IAIAyB,EAAAzB,IAAAP,KAAAM,kBAAAC,KACAP,KAAA6B,WAAAtB,GACAP,KAAAM,kBAAAC,IAAA,KCtFAT,GAAAqC,mBAAA,WACAnC,KAAAoC,IAAA,GAEApC,KAAAqC,OAAA,GAAAvC,IAAAK,OACAH,KAAAsC,KAAA,GAAAxC,IAAAK,OAEAH,KAAAuC,OAAA,EACAvC,KAAAiB,MAAA,EAEAjB,KAAAwC,SACAxC,KAAAyC,MAAA,KAEAC,SAAAhC,iBAAA,UAAAV,KAAA2C,aAAA/B,KAAAZ,OAAA,GACA0C,SAAAhC,iBAAA,QAAAV,KAAA4C,WAAAhC,KAAAZ,OAAA,IAGAF,GAAAqC,mBAAArB,WACAC,YAAAjB,GAAAqC,mBAEAQ,aAAA,SAAAZ,GACA,GAAAK,GAAApC,KAAAwC,MAAAT,EAAAc,QAEA,OAAA/C,IAAAgD,IAAAC,cAAA/C,KAAAoC,MAAApC,KAAAyC,UACAV,GAAAiB,kBAIAhD,KAAAuC,QAAAR,EAAAkB,SACAjD,KAAAiB,OAAAc,EAAAmB,QACAlD,KAAAoC,IAAAL,EAAAc,QAEAT,GAAAA,EAAAe,OAEAnD,KAAAwC,MAAAT,EAAAc,SAAAO,SAAAC,YAAAC,MAAAlB,EAAAmB,SAIAnB,GAWApC,KAAAwC,MAAAT,EAAAc,SAAAM,QAAA,EACAnD,KAAAwC,MAAAT,EAAAc,SAAAU,SAAAF,YAAAC,MACAtD,KAAAwC,MAAAT,EAAAc,SAAAO,SAAA,GAXApD,KAAAwC,MAAAT,EAAAc,UACAM,QAAA,EACAI,SAAAF,YAAAC,MACAE,OAAA,EACAJ,SAAA,GAWApD,KAAAqC,OAAAT,SAAA5B,KAAAoC,UACApC,KAAAyC,MAAAzC,KAAAoC,OAGAQ,WAAA,SAAAb,GACA,MAAAjC,IAAAgD,IAAAC,iBACAhB,GAAAiB,kBAIAhD,KAAAoC,IAAA,GACApC,KAAAuC,OAAA,EACAvC,KAAAiB,MAAA,EAEAjB,KAAAwC,MAAAT,EAAAc,UACA7C,KAAAwC,MAAAT,EAAAc,SAAAM,QAAA,EACAnD,KAAAwC,MAAAT,EAAAc,SAAAW,OAAAH,YAAAC,OAIAtD,KAAAwC,MAAAT,EAAAc,UACAM,QAAA,EACAI,SAAAF,YAAAC,MACAE,OAAAH,YAAAC,MACAF,SAAA,OAIApD,MAAAsC,KAAAV,SAAAG,EAAAc,QAAA7C,KAAAwC,MAAAT,EAAAc,SAAAW,OAAAxD,KAAAwC,MAAAT,EAAAc,SAAAU,YAOA5B,SAAA,WACA,IAAA,GAAAS,KAAApC,MAAAwC,MACAxC,KAAAwC,MAAAJ,GAAAe,QAAA,GAUAM,YAAA,SAAAC,EAAAN,GAKA,MAJA,mBAAAA,KACAA,EAAA,KAGApD,KAAAwC,MAAAkB,IAAA1D,KAAAwC,MAAAkB,GAAAP,QAAAnD,KAAAwC,MAAAkB,GAAAN,SAAAA,GACA,GAGA,GAWAO,aAAA,SAAAD,EAAAN,GAKA,MAJA,mBAAAA,KACAA,EAAA,KAGApD,KAAAwC,MAAAkB,IAAA1D,KAAAwC,MAAAkB,GAAAP,UAAA,GAAAE,YAAAC,MAAAtD,KAAAwC,MAAAkB,GAAAF,OAAAJ,GACA,GAGA,GASAD,OAAA,SAAAO,GACA,MAAA1D,MAAAwC,MAAAkB,GACA1D,KAAAwC,MAAAkB,GAAAP,QAEA,GAGAS,EAAA,IAAAC,WAAA,GACAC,EAAA,IAAAD,WAAA,GACAE,EAAA,IAAAF,WAAA,GACAG,EAAA,IAAAH,WAAA,GACAI,EAAA,IAAAJ,WAAA,GACAK,EAAA,IAAAL,WAAA,GACAM,EAAA,IAAAN,WAAA,GACAO,EAAA,IAAAP,WAAA,GACAQ,EAAA,IAAAR,WAAA,GACAS,EAAA,IAAAT,WAAA,GACAU,EAAA,IAAAV,WAAA,GACAW,EAAA,IAAAX,WAAA,GACAY,EAAA,IAAAZ,WAAA,GACAa,EAAA,IAAAb,WAAA,GACAc,EAAA,IAAAd,WAAA,GACAe,EAAA,IAAAf,WAAA,GACAgB,EAAA,IAAAhB,WAAA,GACAiB,EAAA,IAAAjB,WAAA,GACAkB,EAAA,IAAAlB,WAAA,GACAmB,EAAA,IAAAnB,WAAA,GACAoB,EAAA,IAAApB,WAAA,GACAqB,EAAA,IAAArB,WAAA,GACAsB,EAAA,IAAAtB,WAAA,GACAuB,EAAA,IAAAvB,WAAA,GACAwB,EAAA,IAAAxB,WAAA,GACAyB,EAAA,IAAAzB,WAAA,GACA0B,KAAA,IAAA1B,WAAA,GACA2B,IAAA,IAAA3B,WAAA,GACA4B,IAAA,IAAA5B,WAAA,GACA6B,MAAA,IAAA7B,WAAA,GACA8B,KAAA,IAAA9B,WAAA,GACA+B,KAAA,IAAA/B,WAAA,GACAgC,IAAA,IAAAhC,WAAA,GACAiC,MAAA,IAAAjC,WAAA,GACAkC,MAAA,IAAAlC,WAAA,GACAmC,KAAA,IAAAnC,WAAA,GACAoC,SAAA,GACAC,SAAA,GACAC,SAAA,GACAC,SAAA,GACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,eAAA,IACAC,cAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,OAAA,IACAC,WAAA,IACAC,cAAA,IACAC,MAAA,IACAC,aAAA,IACAC,eAAA,IACAC,eAAA,IACAC,OAAA,IACAC,UAAA,EACAC,IAAA,EACAC,MAAA,GACAC,MAAA,GACAC,MAAA,GACAC,QAAA,GACAC,IAAA,GACAC,UAAA,GACAC,IAAA,GACAC,SAAA,GACAC,QAAA,GACAC,UAAA,GACAC,IAAA,GACAC,KAAA,GACAC,KAAA,GACAC,GAAA,GACAC,MAAA,GACAC,KAAA,GACAC,OAAA,GACAC,OAAA,GACAC,KAAA,GACAC,SAAA,KCpPAhK,GAAAiK,gBAAA,WACA/J,KAAAgK,SAAA,GAAAlK,IAAAmK,KAEAjK,KAAAqC,OAAA,GAAAvC,IAAAK,OACAH,KAAAsC,KAAA,GAAAxC,IAAAK,OAEAH,KAAAkK,MAAA,EACAlK,KAAAuC,OAAA,EACAvC,KAAAiB,MAAA,EAEAyB,SAAAhC,iBAAA,YAAAV,KAAAmK,aAAA,GACAzH,SAAAhC,iBAAA,UAAAV,KAAAoK,WAAA,GACA1H,SAAAhC,iBAAA,WAAAV,KAAAoK,WAAA,GACA1H,SAAAhC,iBAAA,YAAAV,KAAAqK,aAAA,GACA3H,SAAAhC,iBAAA,cAAAV,KAAAsK,gBAAA,IAGAxK,GAAAiK,gBAAAjJ,WACAC,YAAAjB,GAAAiK,gBAEAI,YAAA,SAAApI,GACA,MAAAjC,IAAAgD,IAAAC,iBACAhB,GAAAiB,kBAIAhD,KAAAgK,SAAAO,EAAAxI,EAAAyI,MACAxK,KAAAgK,SAAAS,EAAA1I,EAAA2I,MACA1K,KAAAkK,MAAA,EAEAlK,KAAAuC,QAAAR,EAAAkB,SACAjD,KAAAiB,OAAAc,EAAAmB,YAEAlD,MAAAqC,OAAAT,SAAA5B,KAAAgK,YAGAI,UAAA,SAAArI,GACA,OAAA/B,KAAAkK,MAAApK,GAAAgD,IAAAC,iBACAhB,GAAAiB,kBAIAhD,KAAAgK,SAAAO,EAAAxI,EAAAyI,MACAxK,KAAAgK,SAAAS,EAAA1I,EAAA2I,MACA1K,KAAAkK,MAAA,EAEAlK,KAAAuC,QAAAR,EAAAkB,SACAjD,KAAAiB,OAAAc,EAAAmB,YAEAlD,MAAAsC,KAAAV,SAAA5B,KAAAgK,YAGAK,YAAA,SAAAtI,GACAA,EAAAiB,iBAEAhD,KAAAgK,SAAAO,EAAAxI,EAAAyI,MACAxK,KAAAgK,SAAAS,EAAA1I,EAAA2I,MAEA1K,KAAAuC,QAAAR,EAAAkB,SACAjD,KAAAiB,OAAAc,EAAAmB,SAGAoH,eAAA,SAAAvI,GAEA,MADAA,GAAAiB,kBACA,IChEAlD,GAAA6K,kBAAA,SAAAC,EAAAC,GACAA,EAAAA,MACA/K,GAAAgL,KAAAC,KAAA/K,MAGAA,KAAAgL,MAAA,EACAhL,KAAAiL,IAAA,KAGAnL,GAAAoL,KAAAC,UAAAnL,KAAA6K,GAGA7K,KAAA4K,OAAAA,EAGA5K,KAAAoL,MAAAR,EAAAQ,MACApL,KAAAqL,SAAAT,EAAAS,SAEArL,KAAAqB,QAAA,GAIAvB,GAAA6K,kBAAAW,SAAA,QACAxL,GAAA6K,kBAAAY,UAAA,kBACAzL,GAAA6K,kBAAAa,SAAA,GAEA1L,GAAA6K,kBAAA7J,WACAC,YAAAjB,GAAA6K,kBAEAhJ,SAAA,WACA3B,KAAAoL,MAAAb,EAAAvK,KAAAoL,MAAAX,EAAA,EACAzK,KAAAqL,SAAAd,EAAAvK,KAAAqL,SAAAZ,EAAA,EACAzK,KAAAqB,QAAA,GAGAoK,QAAA,WACAzL,KAAAqB,QAAA,GAGAL,OAAA,WACAhB,KAAAoL,MAAAM,KAAA1L,KAAAiL,IAAAU,UAAAC,eAAA5L,KAAAgL,OACAhL,KAAAqL,SAAAK,KAAA1L,KAAAiL,IAAAY,YAGAvK,QAAA,WAEAtB,KAAA4K,OAAA,KACA5K,KAAAoL,MAAA,KACApL,KAAAqL,SAAA,OChDAvL,GAAAU,YAAA,SAAAsL,GACAhM,GAAAgL,KAAAC,KAAA/K,MAGAA,KAAA8L,GAAAA,EACA9L,KAAAqC,OAAA,GAAAvC,IAAAK,OACAH,KAAAsC,KAAA,GAAAxC,IAAAK,OAGAH,KAAA2L,SAAA,GAAA7L,IAAAmK,KACAjK,KAAA6L,UAAA,GAAA/L,IAAAmK,KACAjK,KAAA+L,YAAA,EACA/L,KAAAgM,aAAA,EAGAhM,KAAAiM,cAAA,GAEAjM,KAAAkM,WAAA,KACAlM,KAAAmM,QAAA,KAEAnM,KAAAoM,YAAA,EACApM,KAAAqM,eAAA,EACArM,KAAAsM,iBAGAxM,GAAAU,YAAAM,WACAC,YAAAjB,GAAAU,YAEAkB,SAAA,SAAA6K,GACAvM,KAAAkC,OAAAqK,GACAvM,KAAAoM,YAAApM,KAAAmM,QAAAlK,OAEAf,UAAAC,kBACAnB,KAAAqM,eAAA,EAGArM,KAAAqM,eAAA,EAGArM,KAAA2B,YAKAO,OAAA,SAAAqK,GACAvM,KAAAkM,WAAAK,EACAvM,KAAAmM,QAAAI,EAAAJ,SAGArK,WAAA,WACA9B,KAAAkM,WAAA,KACAlM,KAAAmM,QAAA,KACAnM,KAAAoM,YAAA,GAIApL,OAAA,WACA,GAAAT,GAAAiM,EACAC,EAAAzM,KAAAkM,WAAAQ,KAAA,GACAC,EAAA3M,KAAAkM,WAAAQ,KAAA,GACAE,EAAA5M,KAAAkM,WAAAQ,KAAA,EAAA1M,KAAAqM,gBACAQ,EAAA7M,KAAAkM,WAAAQ,KAAA,EAAA1M,KAAAqM,eAYA,KAVAI,EAAAzM,KAAAiM,eAAAQ,GAAAzM,KAAAiM,gBAAAQ,EAAA,GACAE,EAAA3M,KAAAiM,eAAAU,GAAA3M,KAAAiM,gBAAAU,EAAA,GACAC,EAAA5M,KAAAiM,eAAAW,GAAA5M,KAAAiM,gBAAAW,EAAA,GACAC,EAAA7M,KAAAiM,eAAAY,GAAA7M,KAAAiM,gBAAAY,EAAA,GAEA7M,KAAA2L,SAAApB,EAAAkC,EACAzM,KAAA2L,SAAAlB,EAAAkC,EACA3M,KAAA6L,UAAAtB,EAAAqC,EACA5M,KAAA6L,UAAApB,EAAAoC,EAEAtM,EAAA,EAAAA,EAAAP,KAAAoM,YAAA7L,IACAiM,EAAAxM,KAAAmM,QAAA5L,GAEA,IAAAA,EACAP,KAAA+L,YAAAS,EAAAM,OAAAN,EAEA,IAAAjM,IACAP,KAAAgM,aAAAQ,EAAAM,OAAAN,GAGAA,IAAAxM,KAAAsM,aAAA/L,GACAP,KAAAqC,OAAAT,SAAArB,EAAAiM,IAEAA,GAAAxM,KAAAsM,aAAA/L,IACAP,KAAAsC,KAAAV,SAAArB,EAAAiM,GAGAxM,KAAAsM,aAAA/L,GAAAiM,GAKArJ,OAAA,SAAAqJ,GACA,MAAA1M,IAAAgD,IAAAC,eAAA/C,KAAAqB,QACA,IAEArB,KAAAmM,QAAAK,IAGA7K,SAAA,WACA3B,KAAAqB,QAAA,EACArB,KAAA2L,SAAApB,EAAA,EACAvK,KAAA2L,SAAAlB,EAAA,EACAzK,KAAA6L,UAAAtB,EAAA,EACAvK,KAAA6L,UAAApB,EAAA,EACAzK,KAAA+L,YAAA,EACA/L,KAAAgM,aAAA,CACA,KAAA,GAAAzL,GAAA,EAAAA,EAAAP,KAAAoM,YAAA7L,IACAP,KAAAmM,QAAA5L,GAAA,EACAP,KAAAsM,aAAA/L,GAAA,GAIAkL,QAAA,WACAzL,KAAAqB,QAAA,GAGAC,QAAA,WAEAtB,KAAAqC,OAAAf,UACAtB,KAAAsC,KAAAhB,UAGAtB,KAAAqC,OAAA,KACArC,KAAAsC,KAAA,OAIAxC,GAAAiN,MACAnJ,EAAA,EACAE,EAAA,EACAsB,EAAA,EACAC,EAAA,EACA2H,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,OAAA,EACAC,MAAA,EACAC,OAAA,GACAC,OAAA,GACA/D,GAAA,GACAE,KAAA,GACAH,KAAA,GACAE,MAAA,ICxJA3J,GAAA0N,OAAA,SAAA5C,EAAAC,GACAA,EAAAA,MACA/K,GAAAgL,KAAAC,KAAA/K,MAGAA,KAAAyN,IAAA,IACAzN,KAAA0N,QAAA,EACA1N,KAAA2N,OAAA,EACA3N,KAAAqB,QAAA,EAGAvB,GAAAoL,KAAAC,UAAAnL,KAAA6K,GAEA7K,KAAA4N,QAAA,GAAA9N,IAAAK,OACAH,KAAA6N,SAAA,GAAA/N,IAAAK,OACAH,KAAA8N,OAAA,GAAAhO,IAAAK,OACAH,KAAA+N,OAAA,GAAAjO,IAAAK,OACAH,KAAAgO,WAAA,GAAAlO,IAAAK,OAGAH,KAAA4K,OAAAA,EACA5K,KAAAiO,OAAA,GAIAnO,GAAA0N,OAAAlC,SAAA,SACAxL,GAAA0N,OAAAjC,UAAA,SACAzL,GAAA0N,OAAAhC,SAAA,EAEA1L,GAAA0N,OAAA1M,WACAC,YAAAjB,GAAA0N,OAEA7L,SAAA,WACA3B,KAAAiO,OAAAjO,KAAAyN,IACAzN,KAAA2N,OAAA,EACA3N,KAAAgO,WAAApM,SAAA5B,KAAAiO,OAAAjO,KAAA4K,SAGAsD,OAAA,SAAAC,GACA,MAAAnO,MAAA2N,OAEA3N,KAAAiO,QAAAE,EAEAnO,KAAAiO,QAAA,GACAjO,KAAAiO,OAAA,EACAjO,KAAA2N,OAAA,EAEA3N,KAAA4N,QAAAhM,SAAAuM,EAAAnO,KAAA4K,UAGA5K,KAAAiO,OAAAjO,KAAAyN,IAAAzN,KAAA0N,UACA1N,KAAAiO,OAAAjO,KAAAyN,IAEAzN,KAAA+N,OAAAnM,SAAAuM,IAGA,EAAAA,EAAAnO,KAAA6N,SAAAjM,SAAAuM,GACAnO,KAAA8N,OAAAlM,SAAAuM,IAGAnO,KAAAiO,QArBA,GAwBAG,MAAA,SAAAD,GACA,MAAAnO,MAAA2N,OAEA3N,KAAAiO,OAAAjO,KAAAyN,MACAzN,KAAAiO,QAAAE,EACAnO,KAAAiO,QAAAjO,KAAAyN,MACAzN,KAAAiO,OAAAjO,KAAAyN,IAEAzN,KAAA+N,OAAAnM,SAAAuM,KAGAnO,KAAAiO,QAVA,GAaA3M,QAAA,WAEAtB,KAAA4N,QAAAtM,UACAtB,KAAA6N,SAAAvM,UACAtB,KAAA8N,OAAAxM,UACAtB,KAAA+N,OAAAzM,UAGAtB,KAAA4K,OAAA,KACA5K,KAAAqO,YAAA,KACArO,KAAA6N,SAAA,KACA7N,KAAA8N,OAAA,KACA9N,KAAA+N,OAAA,OCrFAjO,GAAAwO,SAAA,SAAA1D,GACA9K,GAAAgL,KAAAC,KAAA/K,MAGAA,KAAAuO,MAAA,KACAvO,KAAAwO,SACAxO,KAAA4K,OAAAA,EAEA5K,KAAAyO,aAAA,GAAA3O,IAAAK,OAGAH,KAAA0O,eAAA,KACA1O,KAAA2O,gBAAA,KACA3O,KAAA4O,cAAA,MAIA9O,GAAAwO,SAAAhD,SAAA,QACAxL,GAAAwO,SAAA/C,UAAA,YACAzL,GAAAwO,SAAA9C,SAAA,EACA1L,GAAAwO,SAAAO,MAAA,EAEA/O,GAAAwO,SAAAxN,WACAC,YAAAjB,GAAAwO,SAEA3M,SAAA,WACA3B,KAAAqB,QAAA,GAGAoK,QAAA,WACAzL,KAAAqB,QAAA,EACArB,KAAA8O,SAGAA,MAAA,WACA9O,KAAAwO,MAAAvM,OAAA,EACAjC,KAAA4O,cAAA,KACA5O,KAAA2O,gBAAA,MAGAI,UAAA,SAAAR,EAAAS,GACAT,IAAAvO,KAAA2O,kBACA3O,KAAAwO,MAAAS,KAAAV,GACAvO,KAAA0O,eAAAM,EAEAhP,KAAAqB,QACArB,KAAA2B,aAKAuN,SAAA,WACAlP,KAAAwO,MAAAW,MACAnP,KAAA2O,gBAAA3O,KAAAwO,MAAAvM,OAAAjC,KAAAwO,MAAAxO,KAAAwO,MAAAvM,OAAA,GAAA,KACAjC,KAAA2O,kBACA3O,KAAAyO,aAAA7M,SAAA5B,KAAAuO,MAAA,QACAvO,KAAA4O,cAAA,KACA5O,KAAAyL,YAIAzK,OAAA,WACAhB,KAAA2O,gBAAA3O,KAAAwO,MAAAvM,OAAAjC,KAAAwO,MAAAxO,KAAAwO,MAAAvM,OAAA,GAAA,KACAjC,KAAA2O,kBAEA3O,KAAA2O,kBAAA3O,KAAA4O,gBACA5O,KAAAuO,MAAAvO,KAAA2O,gBAAAS,KACApP,KAAAyO,aAAA7M,SAAA5B,KAAA4O,cAAA5O,KAAA4O,cAAAQ,KAAA,OAAApP,KAAAuO,OACAvO,KAAA4O,cAAA5O,KAAA2O,iBAGA3O,KAAA2O,gBAAA5D,KAAA/K,KAAA0O,kBAIApN,QAAA,WACAtB,KAAA4K,OAAA,KACA5K,KAAA2O,gBAAA,KACA3O,KAAA4O,cAAA,KACA5O,KAAAwO,MAAA,KACAxO,KAAAyO,aAAAnN,UACAtB,KAAAyO,aAAA","file":"motorhaus-extras-common.min.js","sourcesContent":["\n/*\n\tHandles lifecycle of gamepads.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.GamepadController = function() {\n\tthis.controllers = [];\n\tthis.onConnect = new mh.Signal();\n\tthis.onDisconnect = new mh.Signal();\n\tthis.activeControllers = 0;\n\n\t// private\n\tthis._controllerStatus = [];\n\n\tfor (var i = 0; i < 4; i++) {\n\t\tthis.controllers[i] = new mh.XboxGamepad(i);\n\t\tthis._controllerStatus[i] = false;\n\t}\n\n\twindow.addEventListener('gamepadconnected', this._onConnect.bind(this), false);\n\twindow.addEventListener('gamepaddisconnected', this._onDisconnect.bind(this), false);\n};\n\nmh.GamepadController.prototype = {\n\tconstructor: mh.GamepadController,\n\n\tupdate: function() {\n\t\tvar i, ctrl;\n\t\tif (navigator.webkitGetGamepads) {\n\t\t\tthis._scan(); // very poorly designed, Mozilla... use events, not polling for this!\n\t\t}\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\tctrl = this.controllers[i];\n\t\t\tif (ctrl.active) {\n\t\t\t\tctrl.update();\n\t\t\t}\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\t// null references\n\t\tthis.controllers = null;\n\t\tthis.onConnect.dispose();\n\t\tthis.onDisconnect.dispose();\n\t\tthis.onConnect = null;\n\t\tthis.onDisconnect = null;\n\t\tthis._controllerStatus = null;\n\t},\n\n\t_addPad: function(gamepad) {\n\t\tvar ctrl = this.controllers[gamepad.index];\n\t\tctrl.register(gamepad);\n\t\tctrl.activate();\n\n\t\tthis.onConnect.dispatch(ctrl);\n\t\tthis.activeControllers++;\n\t\t// console.log('addPad');\n\t},\n\n\t_removePad: function(gamepad) {\n\t\tvar ctrl = gamepad.index ? this.controllers[gamepad.index] : this.controllers[gamepad];\n\t\tctrl.unregister();\n\n\t\tthis.onDisconnect.dispatch(ctrl);\n\t\tthis.activeControllers--;\n\t\t// console.log('removePad');\n\t},\n\n\t_onConnect: function(evt) {\n\t\tthis._addPad(evt.gamepad);\n\t},\n\n\t_onDisconnect: function(evt) {\n\t\tthis._removePad(evt.gamepad);\n\t},\n\n\t_scan: function() {\n\t\tvar i, gamepads = navigator.webkitGetGamepads();\n\t\tfor (i = 0; i < gamepads.length; i++) {\n\t\t\tif (gamepads[i]) {\n\t\t\t\tif (this._controllerStatus[i]) {\n\t\t\t\t\t// this is fucking pathetic, we should be getting live references!\n\t\t\t\t\tthis.controllers[i].setPad(gamepads[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._addPad(gamepads[i]);\n\t\t\t\t\tthis._controllerStatus[i] = true;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse if (!gamepads[i] && this._controllerStatus[i]) {\n\t\t\t\tthis._removePad(i);\n\t\t\t\tthis._controllerStatus[i] = false;\n\t\t\t}\n\t\t}\n\t}\n};\n","\n/*\n\tAbstracts keyboard input. This should be instantiated once and referenced in a globally-accessible object.\n\tNot a component.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.KeyboardController = function() {\n\tthis.key = -1;\n\n\tthis.onDown = new mh.Signal();\n\tthis.onUp = new mh.Signal();\n\n\tthis.shift = false;\n\tthis.ctrl = false;\n\n\tthis._keys = {};\n\tthis._prev = null;\n\n\tdocument.addEventListener('keydown', this._processDown.bind(this), false);\n\tdocument.addEventListener('keyup', this._processUp.bind(this), false);\n};\n\nmh.KeyboardController.prototype = {\n\tconstructor: mh.KeyboardController,\n\n\t_processDown: function(evt) {\n\t\tvar key = this._keys[evt.keyCode];\n\n\t\tif (mh.kai.inputBlocked || this.key === this._prev) {\n\t\t\tevt.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.shift = !!evt.shiftKey;\n\t\tthis.ctrl = !!evt.ctrlKey;\n\t\tthis.key = evt.keyCode;\n\n\t\tif (key && key.isDown) {\n\t\t\t//  Key already down and still down, so update\n\t\t\tthis._keys[evt.keyCode].duration = performance.now() - key.timeDown;\n\n\t\t}\n\t\telse {\n\t\t\tif (!key) {\n\t\t\t\t//  Not used this key before, so register it\n\t\t\t\tthis._keys[evt.keyCode] = {\n\t\t\t\t\tisDown: true,\n\t\t\t\t\ttimeDown: performance.now(),\n\t\t\t\t\ttimeUp: 0,\n\t\t\t\t\tduration: 0\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//  Key used before but freshly down\n\t\t\t\tthis._keys[evt.keyCode].isDown = true;\n\t\t\t\tthis._keys[evt.keyCode].timeDown = performance.now();\n\t\t\t\tthis._keys[evt.keyCode].duration = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis.onDown.dispatch(this.key);\n\t\tthis._prev = this.key;\n\t},\n\n\t_processUp: function(evt) {\n\t\tif (mh.kai.inputBlocked) {\n\t\t\tevt.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.key = -1;\n\t\tthis.shift = false;\n\t\tthis.ctrl = false;\n\n\t\tif (this._keys[evt.keyCode]) {\n\t\t\tthis._keys[evt.keyCode].isDown = false;\n\t\t\tthis._keys[evt.keyCode].timeUp = performance.now();\n\t\t}\n\t\telse {\n\t\t\t//  Not used this key before, so register it\n\t\t\tthis._keys[evt.keyCode] = {\n\t\t\t\tisDown: false,\n\t\t\t\ttimeDown: performance.now(),\n\t\t\t\ttimeUp: performance.now(),\n\t\t\t\tduration: 0\n\t\t\t};\n\t\t}\n\n\t\tthis.onUp.dispatch(evt.keyCode, this._keys[evt.keyCode].timeUp - this._keys[evt.keyCode].timeDown);\n\t},\n\n\t/**\n\t * Reset the 'isDown' state of all keys.\n\t * @method Phaser.Keyboard#activate\n\t */\n\tactivate: function() {\n\t\tfor (var key in this._keys) {\n\t\t\tthis._keys[key].isDown = false;\n\t\t}\n\t},\n\n\t/**\n\t * Returns the 'just pressed' state of the key. Just pressed is considered true if the key was pressed down within the duration given (default 250ms)\n\t * @param {number} keycode - The keycode of the key to remove, i.e. mh.kai.keys.UP or mh.kai.keys.SPACE_BAR\n\t * @param {number} [duration=100] - The duration below which the key is considered as being just pressed.\n\t * @return {boolean} True if the key is just pressed otherwise false.\n\t */\n\tjustPressed: function(keycode, duration) {\n\t\tif (typeof duration === 'undefined') {\n\t\t\tduration = 100;\n\t\t}\n\n\t\tif (this._keys[keycode] && this._keys[keycode].isDown && this._keys[keycode].duration < duration) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\t/**\n\t * Returns the 'just released' state of the Key. Just released is considered as being true if the key was released within the duration given (default 250ms)\n\t * @method Phaser.Keyboard#justPressed\n\t * @param {number} keycode - The keycode of the key to remove, i.e. mh.kai.keys.UP or mh.kai.keys.SPACE_BAR\n\t * @param {number} [duration=100] - The duration below which the key is considered as being just released.\n\t * @return {boolean} True if the key is just released otherwise false.\n\t */\n\tjustReleased: function(keycode, duration) {\n\t\tif (typeof duration === 'undefined') {\n\t\t\tduration = 100;\n\t\t}\n\n\t\tif (this._keys[keycode] && this._keys[keycode].isDown === false && (performance.now() - this._keys[keycode].timeUp < duration)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\t/**\n\t * Returns true of the key is currently pressed down. Note that it can only detect key presses on the web browser.\n\t * @param {number} keycode - The keycode of the key to remove, i.e. mh.kai.keys.UP or mh.kai.keys.SPACE_BAR\n\t * @return {boolean} True if the key is currently down.\n\t */\n\tisDown: function(keycode) {\n\t\tif (this._keys[keycode]) {\n\t\t\treturn this._keys[keycode].isDown;\n\t\t}\n\t\treturn false;\n\t},\n\n\tA: 'A'.charCodeAt(0),\n\tB: 'B'.charCodeAt(0),\n\tC: 'C'.charCodeAt(0),\n\tD: 'D'.charCodeAt(0),\n\tE: 'E'.charCodeAt(0),\n\tF: 'F'.charCodeAt(0),\n\tG: 'G'.charCodeAt(0),\n\tH: 'H'.charCodeAt(0),\n\tI: 'I'.charCodeAt(0),\n\tJ: 'J'.charCodeAt(0),\n\tK: 'K'.charCodeAt(0),\n\tL: 'L'.charCodeAt(0),\n\tM: 'M'.charCodeAt(0),\n\tN: 'N'.charCodeAt(0),\n\tO: 'O'.charCodeAt(0),\n\tP: 'P'.charCodeAt(0),\n\tQ: 'Q'.charCodeAt(0),\n\tR: 'R'.charCodeAt(0),\n\tS: 'S'.charCodeAt(0),\n\tT: 'T'.charCodeAt(0),\n\tU: 'U'.charCodeAt(0),\n\tV: 'V'.charCodeAt(0),\n\tW: 'W'.charCodeAt(0),\n\tX: 'X'.charCodeAt(0),\n\tY: 'Y'.charCodeAt(0),\n\tZ: 'Z'.charCodeAt(0),\n\tZERO: '0'.charCodeAt(0),\n\tONE: '1'.charCodeAt(0),\n\tTWO: '2'.charCodeAt(0),\n\tTHREE: '3'.charCodeAt(0),\n\tFOUR: '4'.charCodeAt(0),\n\tFIVE: '5'.charCodeAt(0),\n\tSIX: '6'.charCodeAt(0),\n\tSEVEN: '7'.charCodeAt(0),\n\tEIGHT: '8'.charCodeAt(0),\n\tNINE: '9'.charCodeAt(0),\n\tNUMPAD_0: 96,\n\tNUMPAD_1: 97,\n\tNUMPAD_2: 98,\n\tNUMPAD_3: 99,\n\tNUMPAD_4: 100,\n\tNUMPAD_5: 101,\n\tNUMPAD_6: 102,\n\tNUMPAD_7: 103,\n\tNUMPAD_8: 104,\n\tNUMPAD_9: 105,\n\tNUMPAD_MULTIPLY: 106,\n\tNUMPAD_ADD: 107,\n\tNUMPAD_ENTER: 108,\n\tNUMPAD_SUBTRACT: 109,\n\tNUMPAD_DECIMAL: 110,\n\tNUMPAD_DIVIDE: 111,\n\tF1: 112,\n\tF2: 113,\n\tF3: 114,\n\tF4: 115,\n\tF5: 116,\n\tF6: 117,\n\tF7: 118,\n\tF8: 119,\n\tF9: 120,\n\tF10: 121,\n\tF11: 122,\n\tF12: 123,\n\tF13: 124,\n\tF14: 125,\n\tF15: 126,\n\tCOLON: 186,\n\tEQUALS: 187,\n\tUNDERSCORE: 189,\n\tQUESTION_MARK: 191,\n\tTILDE: 192,\n\tOPEN_BRACKET: 219,\n\tBACKWARD_SLASH: 220,\n\tCLOSED_BRACKET: 221,\n\tQUOTES: 222,\n\tBACKSPACE: 8,\n\tTAB: 9,\n\tCLEAR: 12,\n\tENTER: 13,\n\tSHIFT: 16,\n\tCONTROL: 17,\n\tALT: 18,\n\tCAPS_LOCK: 20,\n\tESC: 27,\n\tSPACEBAR: 32,\n\tPAGE_UP: 33,\n\tPAGE_DOWN: 34,\n\tEND: 35,\n\tHOME: 36,\n\tLEFT: 37,\n\tUP: 38,\n\tRIGHT: 39,\n\tDOWN: 40,\n\tINSERT: 45,\n\tDELETE: 46,\n\tHELP: 47,\n\tNUM_LOCK: 144\n};\n","/*\n\tBasic mouse tracker that exposes screen position, modifier keys, and events as Signals.\n\tNot a component.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.MouseController = function() {\n\tthis.position = new mh.Vec2();\n\n\tthis.onDown = new mh.Signal();\n\tthis.onUp = new mh.Signal();\n\n\tthis.down = false;\n\tthis.shift = false;\n\tthis.ctrl = false;\n\n\tdocument.addEventListener('mousedown', this.onMouseDown, false);\n\tdocument.addEventListener('mouseup', this.onMouseUp, false);\n\tdocument.addEventListener('mouseout', this.onMouseUp, false);\n\tdocument.addEventListener('mousemove', this.onMouseMove, false);\n\tdocument.addEventListener('contextmenu', this.onMouseContext, false);\n};\n\nmh.MouseController.prototype = {\n\tconstructor: mh.MouseController,\n\n\tonMouseDown: function(evt) {\n\t\tif (mh.kai.inputBlocked) {\n\t\t\tevt.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.position.x = evt.pageX;\n\t\tthis.position.y = evt.pageY;\n\t\tthis.down = true;\n\n\t\tthis.shift = !!evt.shiftKey;\n\t\tthis.ctrl = !!evt.ctrlKey;\n\n\t\tthis.onDown.dispatch(this.position);\n\t},\n\n\tonMouseUp: function(evt) {\n\t\tif (!this.down || mh.kai.inputBlocked) {\n\t\t\tevt.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.position.x = evt.pageX;\n\t\tthis.position.y = evt.pageY;\n\t\tthis.down = false;\n\n\t\tthis.shift = !!evt.shiftKey;\n\t\tthis.ctrl = !!evt.ctrlKey;\n\n\t\tthis.onUp.dispatch(this.position);\n\t},\n\n\tonMouseMove: function(evt) {\n\t\tevt.preventDefault();\n\n\t\tthis.position.x = evt.pageX;\n\t\tthis.position.y = evt.pageY;\n\n\t\tthis.shift = !!evt.shiftKey;\n\t\tthis.ctrl = !!evt.ctrlKey;\n\t},\n\n\tonMouseContext: function(evt) {\n\t\tevt.preventDefault();\n\t\treturn false;\n\t}\n};\n","/*\n\tConverts a gamepad's analog sticks into acceleration (left) and rotation (right) vectors\n\tfor Geometry Wars style controls.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.TwinStickMovement = function(entity, settings) {\n\tsettings = settings || {};\n\tmh.Base.call(this);\n\n\t// attributes\n\tthis.speed = 1;\n\tthis.pad = null;\n\n\t// attribute override\n\tmh.util.overwrite(this, settings);\n\n\t// private properties\n\tthis.entity = entity;\n\n\t// prerequisite components\n\tthis.accel = entity.accel;\n\tthis.rotation = entity.rotation;\n\n\tthis.active = false;\n};\n\n// required statics for component system\nmh.TwinStickMovement.accessor = 'input'; // property name as it sits on an entity\nmh.TwinStickMovement.className = 'INPUT_TWINSTICK'; // name of component on the ComponenDef object\nmh.TwinStickMovement.priority = 20; // general position in the engine's component array; highest updated first\n\nmh.TwinStickMovement.prototype = {\n\tconstructor: mh.TwinStickMovement,\n\n\tactivate: function() {\n\t\tthis.accel.x = this.accel.y = 0;\n\t\tthis.rotation.x = this.rotation.y = 0;\n\t\tthis.active = true;\n\t},\n\n\tdisable: function() {\n\t\tthis.active = false;\n\t},\n\n\tupdate: function() {\n\t\tthis.accel.copy(this.pad.leftAxis).multiplyScalar(this.speed);\n\t\tthis.rotation.copy(this.pad.rightAxis);\n\t},\n\n\tdispose: function() {\n\t\t// null references\n\t\tthis.entity = null;\n\t\tthis.accel = null;\n\t\tthis.rotation = null;\n\t}\n};\n","/*\n\tHandles specifics of Xbox controllers, used in conjunction with GamepadController.\n\tNot a component.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.XboxGamepad = function(id) {\n\tmh.Base.call(this);\n\n\t// attributes\n\tthis.id = id;\n\tthis.onDown = new mh.Signal();\n\tthis.onUp = new mh.Signal();\n\n\t// NOTE: 'up' is y-, 'right' is x+, all values normalized\n\tthis.leftAxis = new mh.Vec2();\n\tthis.rightAxis = new mh.Vec2();\n\tthis.leftTrigger = 0;\n\tthis.rightTrigger = 0;\n\n\t// xbox 360 sticks drift a CONSIDERABLE amount\n\tthis.axisTolerance = 0.2;\n\n\tthis.controller = null;\n\tthis.buttons = null;\n\n\tthis._numButtons = 0;\n\tthis._mozAxisOffset = 0;\n\tthis._prevButtons = [];\n};\n\nmh.XboxGamepad.prototype = {\n\tconstructor: mh.XboxGamepad,\n\n\tregister: function(ctrlr) {\n\t\tthis.setPad(ctrlr);\n\t\tthis._numButtons = this.buttons.length;\n\n\t\tif (navigator.webkitGetGamepads) {\n\t\t\tthis._mozAxisOffset = 0;\n\t\t}\n\t\telse {\n\t\t\tthis._mozAxisOffset = 1;\n\t\t}\n\n\t\tthis.activate();\n\t\t// console.log('[XboxGamepad.register] CONNECTED '+this.id);\n\t\t// console.log(this.buttons);\n\t},\n\n\tsetPad: function(ctrlr) {\n\t\tthis.controller = ctrlr;\n\t\tthis.buttons = ctrlr.buttons;\n\t},\n\n\tunregister: function() {\n\t\tthis.controller = null;\n\t\tthis.buttons = null;\n\t\tthis._numButtons = 0;\n\t\t// console.log('[XboxGamepad.unregister] DISCONNECTED '+this.id);\n\t},\n\n\tupdate: function() {\n\t\tvar i, btn;\n\t\tvar leftX = this.controller.axes[0];\n\t\tvar leftY = this.controller.axes[1];\n\t\tvar rightX = this.controller.axes[2+this._mozAxisOffset];\n\t\tvar rightY = this.controller.axes[3+this._mozAxisOffset];\n\n\t\tif (leftX < this.axisTolerance && leftX > -this.axisTolerance) { leftX = 0; }\n\t\tif (leftY < this.axisTolerance && leftY > -this.axisTolerance) { leftY = 0; }\n\t\tif (rightX < this.axisTolerance && rightX > -this.axisTolerance) { rightX = 0; }\n\t\tif (rightY < this.axisTolerance && rightY > -this.axisTolerance) { rightY = 0; }\n\n\t\tthis.leftAxis.x = leftX;\n\t\tthis.leftAxis.y = leftY;\n\t\tthis.rightAxis.x = rightX;\n\t\tthis.rightAxis.y = rightY;\n\n\t\tfor (i = 0; i < this._numButtons; i++) {\n\t\t\tbtn = this.buttons[i];\n\n\t\t\tif (i === 6) {\n\t\t\t\tthis.leftTrigger = btn.value || btn;\n\t\t\t}\n\t\t\telse if (i === 7) {\n\t\t\t\tthis.rightTrigger = btn.value || btn;\n\t\t\t}\n\n\t\t\tif (btn && !this._prevButtons[i]) {\n\t\t\t\tthis.onDown.dispatch(i, btn);\n\t\t\t}\n\t\t\telse if (!btn && this._prevButtons[i]) {\n\t\t\t\tthis.onUp.dispatch(i, btn);\n\t\t\t}\n\n\t\t\tthis._prevButtons[i] = btn;\n\n\t\t}\n\t},\n\n\tisDown: function(btn) {\n\t\tif (mh.kai.inputBlocked || !this.active) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !!this.buttons[btn];\n\t},\n\n\tactivate: function() {\n\t\tthis.active = true;\n\t\tthis.leftAxis.x = 0;\n\t\tthis.leftAxis.y = 0;\n\t\tthis.rightAxis.x = 0;\n\t\tthis.rightAxis.y = 0;\n\t\tthis.leftTrigger = 0;\n\t\tthis.rightTrigger = 0;\n\t\tfor (var i = 0; i < this._numButtons; i++) {\n\t\t\tthis.buttons[i] = 0;\n\t\t\tthis._prevButtons[i] = 0;\n\t\t}\n\t},\n\n\tdisable: function() {\n\t\tthis.active = false;\n\t},\n\n\tdispose: function() {\n\t\t// remove signal callbacks\n\t\tthis.onDown.dispose();\n\t\tthis.onUp.dispose();\n\n\t\t// null references\n\t\tthis.onDown = null;\n\t\tthis.onUp = null;\n\t}\n};\n\nmh.XBOX = {\n\tA: 0,\n\tB: 1,\n\tX: 2,\n\tY: 3,\n\tLB: 4,\n\tRB: 5,\n\tLT: 6,\n\tRT: 7,\n\tSELECT: 8,\n\tSTART: 9,\n\tLSTICK: 10,\n\tRSTICK: 11,\n\tUP: 12,\n\tDOWN: 13,\n\tLEFT: 14,\n\tRIGHT: 15\n};\n","mh.Health = function(entity, settings) {\n\tsettings = settings || {};\n\tmh.Base.call(this);\n\n\t// attributes\n\tthis.max = 100;\n\tthis.overage = 0;\n\tthis.alive = false;\n\tthis.active = false; // this component doesn't need to be updated\n\n\t// attribute override\n\tmh.util.overwrite(this, settings);\n\n\tthis.onDeath = new mh.Signal();\n\tthis.onDamage = new mh.Signal();\n\tthis.onHeal = new mh.Signal();\n\tthis.onFull = new mh.Signal();\n\tthis.onActivate = new mh.Signal();\n\n\t// private properties\n\tthis.entity = entity;\n\tthis._meter = 0;\n};\n\n// required statics for component system\nmh.Health.accessor = 'health'; // property name as it sits on an entity\nmh.Health.className = 'HEALTH'; // name of component on the ComponenDef object\nmh.Health.priority = 1; // general position in the engine's component array; highest updated first\n\nmh.Health.prototype = {\n\tconstructor: mh.Health,\n\n\tactivate: function() {\n\t\tthis._meter = this.max;\n\t\tthis.alive = true;\n\t\tthis.onActivate.dispatch(this._meter, this.entity);\n\t},\n\n\tchange: function(amount) {\n\t\tif (!this.alive) return 0;\n\n\t\tthis._meter += amount;\n\n\t\tif (this._meter <= 0) {\n\t\t\tthis._meter = 0;\n\t\t\tthis.alive = false;\n\n\t\t\tthis.onDeath.dispatch(amount, this.entity);\n\t\t}\n\t\telse {\n\t\t\tif (this._meter > this.max + this.overage) {\n\t\t\t\tthis._meter = this.max;\n\n\t\t\t\tthis.onFull.dispatch(amount);\n\t\t\t}\n\n\t\t\tif (amount < 0) this.onDamage.dispatch(amount);\n\t\t\telse this.onHeal.dispatch(amount);\n\t\t}\n\n\t\treturn this._meter;\n\t},\n\n\tdrain: function(amount) {\n\t\tif (!this.alive) return 0;\n\n\t\tif (this._meter > this.max) {\n\t\t\tthis._meter -= amount;\n\t\t\tif (this._meter <= this.max) {\n\t\t\t\tthis._meter = this.max;\n\n\t\t\t\tthis.onFull.dispatch(amount);\n\t\t\t}\n\t\t}\n\t\treturn this._meter;\n\t},\n\n\tdispose: function() {\n\t\t// remove signal callbacks\n\t\tthis.onDeath.dispose();\n\t\tthis.onDamage.dispose();\n\t\tthis.onHeal.dispose();\n\t\tthis.onFull.dispose();\n\n\t\t// null references\n\t\tthis.entity = null;\n\t\tthis.deathSignal = null;\n\t\tthis.onDamage = null;\n\t\tthis.onHeal = null;\n\t\tthis.onFull = null;\n\t}\n};\n","/*\n\tStack-based Finite State Machine.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.StackFSM = function(entity) {\n\tmh.Base.call(this);\n\n\t// public properties\n\tthis.state = null;\n\tthis.stack = [];\n\tthis.entity = entity;\n\n\tthis.stateChanged = new mh.Signal();\n\n\t// private\n\tthis._activeContext = null;\n\tthis._activeFunction = null;\n\tthis._prevFunction = null;\n};\n\n// required statics for component system\nmh.StackFSM.accessor = 'stack'; // property name as it sits on an entity\nmh.StackFSM.className = 'STACK_FSM'; // name of component on the component definition object\nmh.StackFSM.priority = 5; // general position in the engine's component array; the lower, the earlier it's updated\nmh.StackFSM.post = false; // whether or not this component will have a postUpdate() called on it\n\nmh.StackFSM.prototype = {\n\tconstructor: mh.StackFSM,\n\n\tactivate: function() {\n\t\tthis.active = true;\n\t},\n\n\tdisable: function() {\n\t\tthis.active = false;\n\t\tthis.reset();\n\t},\n\n\treset: function() {\n\t\tthis.stack.length = 0;\n\t\tthis._prevFunction = null;\n\t\tthis._activeFunction = null;\n\t},\n\n\tpushState: function(state, ctx) {\n\t\tif (state !== this._activeFunction) {\n\t\t\tthis.stack.push(state);\n\t\t\tthis._activeContext = ctx;\n\n\t\t\tif (!this.active) {\n\t\t\t\tthis.activate();\n\t\t\t}\n\t\t}\n\t},\n\n\tpopState: function() {\n\t\tthis.stack.pop();\n\t\tthis._activeFunction = this.stack.length ? this.stack[this.stack.length - 1] : null;\n\t\tif (!this._activeFunction) {\n\t\t\tthis.stateChanged.dispatch(this.state, 'null');\n\t\t\tthis._prevFunction = null;\n\t\t\tthis.disable();\n\t\t}\n\t},\n\n\tupdate: function() {\n\t\tthis._activeFunction = this.stack.length ? this.stack[this.stack.length - 1] : null;\n\t\tif (this._activeFunction) {\n\t\t\t// monitor changes so entity can react to unique situations\n\t\t\tif (this._activeFunction !== this._prevFunction) {\n\t\t\t\tthis.state = this._activeFunction.name;\n\t\t\t\tthis.stateChanged.dispatch(this._prevFunction ? this._prevFunction.name : 'null', this.state);\n\t\t\t\tthis._prevFunction = this._activeFunction;\n\t\t\t}\n\n\t\t\tthis._activeFunction.call(this._activeContext);\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\tthis.entity = null;\n\t\tthis._activeFunction = null;\n\t\tthis._prevFunction = null;\n\t\tthis.stack = null;\n\t\tthis.stateChanged.dispose();\n\t\tthis.stateChanged = null;\n\t}\n};\n"],"sourceRoot":"/source/"}